Question	Answer	Source	Metadata	SuggestedQuestions	IsContextOnly	Prompts	QnaId
4. Destructuring	![Destructuring](https://i.imgur.com/eDY2iec.png)	Editorial		[]	false	[]	52
2. Classes	![Classes](https://i.imgur.com/dssBgCA.png)	Editorial		[]	false	[]	53
Hi	Hey! Welcome to React QnA bot. I have notes on the following topics:	Editorial		[]	false	[{"displayOrder":0,"qnaId":60,"displayText":"1. Review"},{"displayOrder":0,"qnaId":57,"displayText":"2. Next Gen JS"},{"displayOrder":0,"qnaId":69,"displayText":"3. Base Features & Syntax"},{"displayOrder":0,"qnaId":83,"displayText":"998. Random Facts"},{"displayOrder":0,"qnaId":77,"displayText":"999. Random Questions"},{"displayOrder":0,"qnaId":80,"displayText":"1000. Algo & Data"},{"displayOrder":0,"qnaId":110,"displayText":"997. TODO"},{"displayOrder":0,"qnaId":128,"displayText":"1001. IK"}]	54
Hey	Hey! Welcome to React QnA bot. I have notes on the following topics:	Editorial		[]	false	[{"displayOrder":0,"qnaId":60,"displayText":"1. Review"},{"displayOrder":0,"qnaId":57,"displayText":"2. Next Gen JS"},{"displayOrder":0,"qnaId":69,"displayText":"3. Base Features & Syntax"},{"displayOrder":0,"qnaId":83,"displayText":"998. Random Facts"},{"displayOrder":0,"qnaId":77,"displayText":"999. Random Questions"},{"displayOrder":0,"qnaId":80,"displayText":"1000. Algo & Data"},{"displayOrder":0,"qnaId":110,"displayText":"997. TODO"},{"displayOrder":0,"qnaId":128,"displayText":"1001. IK"}]	54
Hello	Hey! Welcome to React QnA bot. I have notes on the following topics:	Editorial		[]	false	[{"displayOrder":0,"qnaId":60,"displayText":"1. Review"},{"displayOrder":0,"qnaId":57,"displayText":"2. Next Gen JS"},{"displayOrder":0,"qnaId":69,"displayText":"3. Base Features & Syntax"},{"displayOrder":0,"qnaId":83,"displayText":"998. Random Facts"},{"displayOrder":0,"qnaId":77,"displayText":"999. Random Questions"},{"displayOrder":0,"qnaId":80,"displayText":"1000. Algo & Data"},{"displayOrder":0,"qnaId":110,"displayText":"997. TODO"},{"displayOrder":0,"qnaId":128,"displayText":"1001. IK"}]	54
Howdy	Hey! Welcome to React QnA bot. I have notes on the following topics:	Editorial		[]	false	[{"displayOrder":0,"qnaId":60,"displayText":"1. Review"},{"displayOrder":0,"qnaId":57,"displayText":"2. Next Gen JS"},{"displayOrder":0,"qnaId":69,"displayText":"3. Base Features & Syntax"},{"displayOrder":0,"qnaId":83,"displayText":"998. Random Facts"},{"displayOrder":0,"qnaId":77,"displayText":"999. Random Questions"},{"displayOrder":0,"qnaId":80,"displayText":"1000. Algo & Data"},{"displayOrder":0,"qnaId":110,"displayText":"997. TODO"},{"displayOrder":0,"qnaId":128,"displayText":"1001. IK"}]	54
1. Exports and Imports	![Exports and Imports](https://i.imgur.com/ltMe2zC.png)	Editorial		[]	false	[]	55
3. Rest and Spread Operators	![Rest and Spread](https://i.imgur.com/ZemMw0C.png)	Editorial		[]	false	[]	56
2. Next Gen JS	Following topics are covered under Next Gen JS:	Editorial		[]	false	[{"displayOrder":0,"qnaId":55,"displayText":"1. Exports and Imports"},{"displayOrder":0,"qnaId":53,"displayText":"2. Classes"},{"displayOrder":0,"qnaId":56,"displayText":"3. Rest and Spread Operators"},{"displayOrder":0,"qnaId":52,"displayText":"4. Destructuring"}]	57
Things to remember	Topics as follow (Things to remember):	Editorial		[]	false	[]	58
1. Reference Types	Non-Primitive types, like Objects, are stored in memory and their identifiers simply point to that place place in memory. To copy over the properties use spread technique: ![spreadForImmutabilityInObjects](https://i.imgur.com/tsqT6sj.png)	Editorial		[]	false	[]	59
1. Review	Following topics are covered under Review Section:	Editorial		[]	false	[{"displayOrder":0,"qnaId":59,"displayText":"1. Reference Types"},{"displayOrder":0,"qnaId":61,"displayText":"2. All Array Functions"}]	60
2. All Array Functions	JavaScript array functions like `map()` , `filter()` , `reduce()` etc. can be beneficial since a lot of React concepts rely on working with arrays (in immutable ways). \n\nDocumentation links: \n[`map()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map) [`find()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find) [`findIndex()` ](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex) [`filter()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)  [`reduce()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce?v=b) [`concat()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat?v=b) [`slice()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice) [`splice()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splicetest)\n\nClick for example code:	Editorial		[]	false	[{"displayOrder":0,"qnaId":62,"displayText":".map()"},{"displayOrder":0,"qnaId":63,"displayText":".find()"},{"displayOrder":0,"qnaId":64,"displayText":".findIndex()"},{"displayOrder":0,"qnaId":65,"displayText":".reduce()"},{"displayOrder":0,"qnaId":66,"displayText":".concat()"},{"displayOrder":0,"qnaId":67,"displayText":".slice()"},{"displayOrder":0,"qnaId":68,"displayText":".splice()"}]	61
.map()	```javascript\nvar array1 = [1, 4, 9, 16];\n\n// pass a function to map\nconst map1 = array1.map(x => x * 2);\n\nconsole.log(map1);\n// expected output: Array [2, 8, 18, 32]\n```	Editorial		[]	false	[]	62
.find()	```javascript\nvar array1 = [5, 12, 8, 130, 44];\n\nvar found = array1.find(function(element) {\n  return element > 10;\n});\n\nconsole.log(found);\n// expected output: 12\n```	Editorial		[]	false	[]	63
.findIndex()	```javascript\nvar array1 = [5, 12, 8, 130, 44];\n\nfunction isLargeNumber(element) {\n  return element > 13;\n}\n\nconsole.log(array1.findIndex(isLargeNumber));\n// expected output: 3\n```	Editorial		[]	false	[]	64
.reduce()	```javascript\nconst array1 = [1, 2, 3, 4];\nconst reducer = (accumulator, currentValue) => accumulator + currentValue;\n\n// 1 + 2 + 3 + 4\nconsole.log(array1.reduce(reducer));\n// expected output: 10\n\n// 5 + 1 + 2 + 3 + 4\nconsole.log(array1.reduce(reducer, 5));\n// expected output: 15\n```	Editorial		[]	false	[]	65
.concat()	```javascript\nvar array1 = ['a', 'b', 'c'];\nvar array2 = ['d', 'e', 'f'];\n\nconsole.log(array1.concat(array2));\n// expected output: Array ["a", "b", "c", "d", "e", "f"]\n```	Editorial		[]	false	[]	66
.slice()	```javascript\nvar animals = ['ant', 'bison', 'camel', 'duck', 'elephant'];\n\nconsole.log(animals.slice(2));\n// expected output: Array ["camel", "duck", "elephant"]\n\nconsole.log(animals.slice(2, 4));\n// expected output: Array ["camel", "duck"]\n\nconsole.log(animals.slice(1, 5));\n// expected output: Array ["bison", "camel", "duck", "elephant"]\n```	Editorial		[]	false	[]	67
.splice()	```javascript\nvar months = ['Jan', 'March', 'April', 'June'];\nmonths.splice(1, 0, 'Feb');\n// inserts at index 1\nconsole.log(months);\n// expected output: Array ['Jan', 'Feb', 'March', 'April', 'June']\n\nmonths.splice(4, 1, 'May');\n// replaces 1 element at index 4\nconsole.log(months);\n// expected output: Array ['Jan', 'Feb', 'March', 'April', 'May']\n```	Editorial		[]	false	[]	68
3. Base Features & Syntax	Following topics are covered under Base Features & Syntax Section:	Editorial		[]	false	[{"displayOrder":0,"qnaId":70,"displayText":"25. The Build WorkFlow"},{"displayOrder":0,"qnaId":71,"displayText":"26. Using Create React App"},{"displayOrder":0,"qnaId":72,"displayText":"27. Understanding the Folder Structure"},{"displayOrder":0,"qnaId":85,"displayText":"28. Understanding Component Basics"},{"displayOrder":0,"qnaId":86,"displayText":"29. Understanding JSX"},{"displayOrder":0,"qnaId":87,"displayText":"30. JSX Restrictions"},{"displayOrder":0,"qnaId":90,"displayText":"31. Creating a functional Component"},{"displayOrder":0,"qnaId":91,"displayText":"32. Components & JSX Cheat Sheet"},{"displayOrder":0,"qnaId":92,"displayText":"33. Working with Components & Re-Using Them"},{"displayOrder":0,"qnaId":93,"displayText":"34. Outputting Dynamic Content"},{"displayOrder":0,"qnaId":94,"displayText":"35. Working with Props"}]	69
25. The Build WorkFlow	![The Build WorkFlow](https://i.imgur.com/TNayWEt.png)	Editorial		[]	false	[{"displayOrder":0,"qnaId":71,"displayText":"26. Using Create React App"}]	70
26. Using Create React App	Steps:\n\n1. [Create-React-App GitHub](https://github.com/facebook/create-react-app)\n\n1. [Node.JS dl link](https://nodejs.org/en/)\n\n1. Following commands in console where you wish to create your first react project:\n\n```bash\n\nnpm install create-react-app -g\n\ncreate-react-app react-complete-guide --script-version 1.1.5\n\ncd react-complete-guide\n\nnpm start\n\n```	Editorial		[]	false	[{"displayOrder":0,"qnaId":72,"displayText":"27. Understanding the Folder Structure"}]	71
27. Understanding the Folder Structure	Understanding the Folder Structure	Editorial		[]	false	[{"displayOrder":0,"qnaId":73,"displayText":"1. Initial Folder Structure"},{"displayOrder":0,"qnaId":74,"displayText":"2. Remove `logo.svg`"},{"displayOrder":0,"qnaId":76,"displayText":"3. Initial `App.js`"},{"displayOrder":0,"qnaId":75,"displayText":"4. Initial `App.css`"},{"displayOrder":0,"qnaId":85,"displayText":"28. Understanding Component Basics"}]	72
1. Initial Folder Structure	![initial folder structure](https://i.imgur.com/JPzgjKJ.png)	Editorial		[]	false	[]	73
2. Remove `logo.svg`	Delete `logo.svg`	Editorial		[]	false	[]	74
4. Initial `App.css`	![Intial App.css](https://i.imgur.com/llTAA8g.png)	Editorial		[]	false	[]	75
3. Initial `App.js`	![initial app.js](https://i.imgur.com/259XHzO.png)	Editorial		[]	false	[]	76
999. Random Questions	Please select a question:	Editorial		[]	false	[{"displayOrder":0,"qnaId":78,"displayText":"Purpose of `React` and `{ Component }`"},{"displayOrder":0,"qnaId":79,"displayText":"Purpose of `render()` in Component sub-class"}]	77
Purpose of `React` and `{ Component }`	In `import React, { Component } from 'react;'`,\n`React` is responsible/required for rendering anything to DOM. `React` is always imported to a file where `component` class is used.	Editorial		[]	false	[]	78
Purpose of `render()` in Component sub-class	`render()` is called to render something to the screen.\n\nEvery React component must return some html code in `render()` to render it to the DOM (on the screen).	Editorial		[]	false	[]	79
1000. Algo & Data	A&D categories:	Editorial		[]	false	[{"displayOrder":0,"qnaId":81,"displayText":"Ad-hoc"},{"displayOrder":0,"qnaId":119,"displayText":"Arrays & Strings"},{"displayOrder":0,"qnaId":121,"displayText":"Linked Lists"},{"displayOrder":0,"qnaId":123,"displayText":"Tree"}]	80
Ad-hoc	Ad-hoc questions:	Editorial		[]	false	[{"displayOrder":0,"qnaId":82,"displayText":"pathInZigZagTree(label)"}]	81
pathInZigZagTree(label)	![pathInZigZagTree](https://i.imgur.com/pMmyuxS.png)	Editorial		[]	false	[]	82
998. Random Facts	Select one random fact:	Editorial		[]	false	[{"displayOrder":0,"qnaId":84,"displayText":"`className` instead of `class` in HTML attributes"},{"displayOrder":0,"qnaId":88,"displayText":"What is a `component`?"},{"displayOrder":0,"qnaId":89,"displayText":"Component name start with uppercase"},{"displayOrder":0,"qnaId":96,"displayText":"37. Understanding & Using State"},{"displayOrder":0,"qnaId":108,"displayText":"Use state with care"},{"displayOrder":0,"qnaId":109,"displayText":"Props/State change -> DOM update"},{"displayOrder":0,"qnaId":116,"displayText":"DOs"},{"displayOrder":0,"qnaId":117,"displayText":"DON'Ts"}]	83
`className` instead of `class` in HTML attributes	![HTML className instead of class](https://i.imgur.com/87MH8b1.png)	Editorial		[]	false	[]	84
28. Understanding Component Basics	You should only create one base component, typically `App` inside which you must nest rest of your app.	Editorial		[]	false	[{"displayOrder":0,"qnaId":86,"displayText":"29. Understanding JSX"}]	85
29. Understanding JSX	![understanding JSX](https://i.imgur.com/6OtkKcI.png)	Editorial		[]	false	[{"displayOrder":0,"qnaId":87,"displayText":"30. JSX Restrictions"}]	86
30. JSX Restrictions	1. use `className` instead of `class` since `class` is a already a reserved keyword.\n1. Should return only 1 `DOM element` in a `React component`.	Editorial		[]	false	[{"displayOrder":0,"qnaId":90,"displayText":"31. Creating a functional Component"}]	87
What is a `component`?	In its simplest form, a `component` is a function returning some JSX.	Editorial		[]	false	[]	88
Component name start with uppercase	Component name must start with uppercase character. In react, in jsx, all elements starting with lowercase characters like `div` or `h1` are reserved for the native html elements.	Editorial		[]	false	[]	89
31. Creating a functional Component	Person Function:\n![Person function](https://i.imgur.com/K1OfRXH.png)\nPerson imported in App.js:\n![person used in app](https://i.imgur.com/EbUDaod.png)	Editorial		[]	false	[{"displayOrder":0,"qnaId":91,"displayText":"32. Components & JSX Cheat Sheet"}]	90
32. Components & JSX Cheat Sheet	![32. Components & JSX Cheat Sheet](https://i.imgur.com/DxNxji6.png)	Editorial		[]	false	[{"displayOrder":0,"qnaId":92,"displayText":"33. Working with Components & Re-Using Them"}]	91
33. Working with Components & Re-Using Them	[lecture link](https://www.udemy.com/react-the-complete-guide-incl-redux/learn/lecture/8090864#overview)\n\n~![33. Working with Components & Re-Using Them](https://i.imgur.com/oTqxKMg.png)	Editorial		[]	false	[{"displayOrder":0,"qnaId":93,"displayText":"34. Outputting Dynamic Content"}]	92
34. Outputting Dynamic Content	[34. Outputting Dynamic Content](https://www.udemy.com/react-the-complete-guide-incl-redux/learn/lecture/8090868#overview)\n\n![34. Outputting Dynamic Content](https://i.imgur.com/0f2OVX8.png)	Editorial		[]	false	[{"displayOrder":0,"qnaId":94,"displayText":"35. Working with Props"}]	93
35. Working with Props	[35. Working with Props](https://www.udemy.com/react-the-complete-guide-incl-redux/learn/lecture/8090870#overview)\n\n**Person.js:**\n![35. Working with Props](https://i.imgur.com/P1rutzN.png)\n\n**App.js**\n![app.js](https://i.imgur.com/OIUgbpW.png)\n\nNote: state change -> React updates the DOM	Editorial		[]	false	[{"displayOrder":0,"qnaId":95,"displayText":"36. Understanding the Children Property"}]	94
36. Understanding the Children Property	[36. Understanding the Children Property](https://www.udemy.com/react-the-complete-guide-incl-redux/learn/lecture/8090872#overview)\n\n**child being sent:\n\n**![child](https://i.imgur.com/SRUZ6un.png)\n\n[36. Understanding the Children Property]\n\n![36. Understanding the Children Property](https://i.imgur.com/XNa1yjH.png)	Editorial		[]	false	[{"displayOrder":0,"qnaId":96,"displayText":"37. Understanding & Using State"}]	95
37. Understanding & Using State	**State** property here is **only available in classes that extend components. **Actually, with React 16.8, a new feature was released called React hooks that be used to manage state in functional components!\n\n[37. Understanding & Using State](https://i.imgur.com/xJIyiZv.png)	Editorial		[]	false	[{"displayOrder":0,"qnaId":97,"displayText":"38. Props & State"}]	96
38. Props & State	![38. Props & State](https://i.imgur.com/cxuyuIB.png)	Editorial		[]	false	[{"displayOrder":0,"qnaId":98,"displayText":"39. Handling Events with Methods"}]	97
39. Handling Events with Methods	![39. Handling Events with Methods](https://i.imgur.com/FThCogk.png)\n\nBest Practice(namingConvention): ___Handler for event handlers that you are not actively calling.\n\nNote: Must use **___ = () {___} **for **method definition** in order to use **this** inside this method.\n\nNote: **DO NOT add `()` **instead **pass reference to the method **when binding. Otherwise, the method would be called when this DOM is being rendered.	Editorial		[]	false	[{"displayOrder":0,"qnaId":99,"displayText":"40. To Which Events Can You Listen?"}]	98
40. To Which Events Can You Listen?	[![40. To Which Events Can You Listen?](https://i.imgur.com/w7F9Sck.jpg)](https://i.imgur.com/w7F9Sck.jpg)	Editorial		[]	false	[{"displayOrder":0,"qnaId":100,"displayText":"41. Manipulating the State"}]	99
41. Manipulating the State	[![41. Manipulating the State](https://i.imgur.com/sSXdst8.png)](https://i.imgur.com/sSXdst8.png)	Editorial		[]	false	[{"displayOrder":0,"qnaId":101,"displayText":"42. Function Components Naming"}]	100
42. Function Components Naming	[![42. Function Components Naming](https://i.imgur.com/ODEwwLh.png)](https://i.imgur.com/ODEwwLh.png)	Editorial		[]	false	[{"displayOrder":0,"qnaId":102,"displayText":"43. Using the useState() Hook for State Manipulation"}]	101
43. Using the useState() Hook for State Manipulation	[43. Using the useState() Hook for State Manipulation]([https://www.udemy.com/react-the-complete-guide-incl-redux/learn/lecture/13556164](https://www.udemy.com/react-the-complete-guide-incl-redux/learn/lecture/13556164))\n\n- with hooks, now we can manipulate state from functional components as well\n\n- import {**useState**} from 'react'`\n\n- `[ **xyzState, setXyzStateFn** ] = useState(**state**)\n\n\t- this.state -> **xyzState**\n\n\t- this.setState -> **setXyzStateFn**\n\n- **Note:** In React hooks, fn which you get as second array element, doesn't merge (what you pass) to the old state, instead replaces it.\n- so it is better just use **userState** multiple times to create separate multiple state slices.\n\n- You don't have one big state object, though you could and you could manually merge it if you prefer that but instead, you have multiple separated state slices.	Editorial		[]	false	[{"displayOrder":0,"qnaId":103,"displayText":"44. Stateless vs Stateful Components"}]	102
44. Stateless vs Stateful Components	[44. Stateless vs Stateful Components](https://www.udemy.com/react-the-complete-guide-incl-redux/learn/lecture/13556166#overview)\n\n- **Stateless/dumb/Presentational Components:**\n\n\t- maximize their use\n\n[![Stateless Components](https://i.imgur.com/bofH1Tb.png)](https://i.imgur.com/bofH1Tb.png)\n\n- **Stateful/smart/Container components **(Class-based with state or functional with `useState()`)\n\n\t- minimize their use\n\n[![Stateful components](https://i.imgur.com/Lxw4exJ.png)](https://i.imgur.com/Lxw4exJ.png)	Editorial		[]	false	[{"displayOrder":0,"qnaId":104,"displayText":"45. Passing Method References Between Components"}]	103
45. Passing Method References Between Components	- Send `this.switchHandler`'s method reference via `click` from `App.js` to `Person.js` \n\n**App.js:\n\n**\n\n[![app.js - passing method references](https://i.imgur.com/JmT0crn.png)](https://i.imgur.com/JmT0crn.png)\n\n**Person.js**\n\n[![Person.js - passing method references](https://i.imgur.com/PPu91oF.png)](https://i.imgur.com/PPu91oF.png)\n\n**ALSO Note:**\n\n- you can pass down method references (like click handlers) which allow you to change data in the parent component\n\n**Method 1 (preferred method):\n\n**\n\n[![method_1: (binding) passing argument in passed method references](https://i.imgur.com/h4QQvY9.png)](https://i.imgur.com/h4QQvY9.png)\n\n**\n\nMethod 2 (can be inefficient due to react re-rendering):\n\n**\n\n[![method_2: passing argument in passed method references](https://i.imgur.com/wsxhsQc.png)](https://i.imgur.com/wsxhsQc.png)\n\n	Editorial		[]	false	[{"displayOrder":0,"qnaId":105,"displayText":"46. Adding Two Way Binding"}]	104
46. Adding Two Way Binding	46. Adding Two Way Binding:\n\nGood summary at [Udemy: Two-way binding](https://www.udemy.com/react-the-complete-guide-incl-redux/learn/lecture/8090892?start=302#bookmarks)\n\n**App.js**\n\n[![nameChangedHandler](https://i.imgur.com/sXpxmbN.png)](https://i.imgur.com/sXpxmbN.png)\n\n**Person.js:**\n\n[![person.js: two-way binding](https://i.imgur.com/0pQY4hG.png)](https://i.imgur.com/0pQY4hG.png)\n\n	Editorial		[]	false	[{"displayOrder":0,"qnaId":106,"displayText":"47. Adding Styling with Stylesheets"}]	105
47. Adding Styling with Stylesheets	**Person.css:**\n\n[![47. Adding Styling with Stylesheets](https://i.imgur.com/PcwQ8lB.png)](https://i.imgur.com/PcwQ8lB.png)\n\n**Person.js:**\n\n[![person.js: person.css import](https://i.imgur.com/wsgk0z5.png)](https://i.imgur.com/wsgk0z5.png)\n\n	Editorial		[]	false	[{"displayOrder":0,"qnaId":107,"displayText":"48. Working with Inline Styles"}]	106
48. Working with Inline Styles	![48. Working with Inline Styles]()\n\n**Limitation: **not being able to leverage the full power of CSS (like adding *cursor->pointer* **functionality via inlineStyles is very hard)	Editorial		[]	false	[]	107
Use state with care	Having state in all your components and manipulating it from anywhere in your app makes your app quickly unpredictable and hard to manage, especially as it grows	Editorial		[]	false	[]	108
Props/State-change reaction	Props/state change -> React updates the DOM	Editorial		[]	false	[]	109
997. TODO	Select a TODO:	Editorial		[]	false	[{"displayOrder":0,"qnaId":111,"displayText":"find hierarchy"},{"displayOrder":0,"qnaId":112,"displayText":"Change index of all to actual video in Udemy"},{"displayOrder":0,"qnaId":113,"displayText":"`Best Practice: blah blah` text where needed"},{"displayOrder":0,"qnaId":114,"displayText":"Change all images to link[![image]()]() like 40"},{"displayOrder":0,"qnaId":115,"displayText":"random facts -> MUST do + do + don'ts"}]	110
find hierarchy	find hierarchy	Editorial		[]	false	[]	111
Change index of all to actual video in Udemy	Change index of all to actual video in Udemy	Editorial		[]	false	[]	112
`Best Practice: blah blah` text where needed	would help with `find hierarchy` as well	Editorial		[]	false	[]	113
Change all images to link[![image]()]() like 40	using sublime text or vscode	Editorial		[]	false	[]	114
random facts -> MUST do + do + don'ts	random facts -> MUST do + do + don'ts and do something about random questions as well. maybe merge it	Editorial		[]	false	[]	115
DOs	DOs	Editorial		[]	false	[]	116
DON'Ts	select a DON'T:	Editorial		[]	false	[{"displayOrder":0,"qnaId":118,"displayText":"setting state without this.setState()"}]	117
setting state without this.setState()	[![dont set state without setState fn](https://i.imgur.com/7A3oEwV.png)](https://i.imgur.com/7A3oEwV.png)	Editorial		[]	false	[]	118
Arrays & Strings	Select a question under Arrays & Strings:	Editorial		[]	false	[{"displayOrder":0,"qnaId":120,"displayText":"LC1. Two Sum"}]	119
LC2. Two Sum	[![Two Sum](https://i.imgur.com/xQcWBIH.png)](https://i.imgur.com/xQcWBIH.png)	Editorial		[]	false	[]	120
Linked Lists	Select a  questions under Linked Lists:	Editorial		[]	false	[{"displayOrder":0,"qnaId":122,"displayText":"LC2. Add Two Numbers:"}]	121
LC2. Add Two Numbers:	[![LC2. Add two numbers](https://i.imgur.com/ptmzlG3.png)](https://i.imgur.com/ptmzlG3.png)	Editorial		[]	false	[]	122
Tree	Select one Tree question:	Editorial		[]	false	[{"displayOrder":0,"qnaId":124,"displayText":"printZigZag"},{"displayOrder":0,"qnaId":125,"displayText":"Sum of Left Leaves"},{"displayOrder":0,"qnaId":126,"displayText":"Recursive - Max Loot - no consecutive houses"},{"displayOrder":0,"qnaId":127,"displayText":"(post-order) Max Loot - no consecutive houses"}]	123
printZigZag	[![print zig zag](https://i.imgur.com/1uHaYCC.png)](https://i.imgur.com/1uHaYCC.png)	Editorial		[]	false	[]	124
Sum of Left Leaves	[![Sum of Left Leaves](https://i.imgur.com/LoOuz2x.png)](https://i.imgur.com/LoOuz2x.png)	Editorial		[]	false	[]	125
Recursive - Max Loot - no consecutive houses	[![Recursive - Max Loot - no consecutive houses](https://i.imgur.com/RhuLYnv.png)](https://i.imgur.com/RhuLYnv.png)	Editorial		[]	false	[]	126
(post-order) Max Loot - no consecutive houses	[![post-order max Loot](https://i.imgur.com/lOiQHtA.png)](https://i.imgur.com/lOiQHtA.png)	Editorial		[]	false	[]	127
1001. IK	Workshops	Editorial		[]	false	[{"displayOrder":0,"qnaId":129,"displayText":"Resume Workshop"},{"displayOrder":0,"qnaId":130,"displayText":"Offer Negotiation"},{"displayOrder":0,"qnaId":131,"displayText":"Behavioral Interview At Amazon Workshop"},{"displayOrder":0,"qnaId":132,"displayText":"LinkedIn/Professional Branding Workshop"},{"displayOrder":0,"qnaId":133,"displayText":"Interview Research and Strategy Workshop"},{"displayOrder":0,"qnaId":134,"displayText":"Productivity and Structure Workshop Nick, May 1"}]	128
Resume Workshop	https://www.youtube.com/watch?v=n8XcrsnE6fU	Editorial		[]	false	[{"displayOrder":0,"qnaId":130,"displayText":"Offer Negotiation"}]	129
Offer Negotiation	https://www.youtube.com/watch?v=PYEykyznOg8\n	Editorial		[]	false	[{"displayOrder":0,"qnaId":131,"displayText":"Behavioral Interview At Amazon Workshop"}]	130
Behavioral Interview At Amazon Workshop	https://www.youtube.com/watch?v=Kfioed3m8Kk	Editorial		[]	false	[{"displayOrder":0,"qnaId":132,"displayText":"LinkedIn/Professional Branding Workshop"}]	131
LinkedIn/Professional Branding Workshop	https://www.youtube.com/watch?v=WPgXy15euk8	Editorial		[]	false	[{"displayOrder":0,"qnaId":133,"displayText":"Interview Research and Strategy Workshop"}]	132
Interview Research and Strategy Workshop	https://www.youtube.com/watch?v=OEUlaLsy_4Y	Editorial		[]	false	[{"displayOrder":0,"qnaId":134,"displayText":"Productivity and Structure Workshop Nick, May 1"}]	133
Productivity and Structure Workshop Nick, May 1	https://www.youtube.com/watch?v=c4lMk_8ve2k	Editorial		[]	false	[{"displayOrder":0,"qnaId":135,"displayText":"PW. Agenda"},{"displayOrder":0,"qnaId":136,"displayText":"PW_1. Structure"},{"displayOrder":0,"qnaId":137,"displayText":"PW_2. WORK: Deliberate Practice"},{"displayOrder":0,"qnaId":138,"displayText":"PW_3. WORK: Growth VS. Fixed"},{"displayOrder":0,"qnaId":139,"displayText":"PW_4. GREENSHEET: Get Confident-DeliberatePractice"}]	134
PW. Agenda	32:24\n\n[![PW. Agenda](https://i.imgur.com/kOxoVEl.png)](https://i.imgur.com/kOxoVEl.png)	Editorial		[]	false	[{"displayOrder":0,"qnaId":136,"displayText":"PW_1. Structure"}]	135
PW_1. Structure	32.50\n\niPrep = BIG PIE -> Structure -> figure out gaps\n\n{Getting Things Done (GTD) - David Alan}\n\n- GTD: Now (problem), Next (set of problems), Future (list of topics)\n\n- Work Segments (X per day)\n\n[![PW_1. Structure](https://i.imgur.com/mU2kj3P.png)](https://i.imgur.com/mU2kj3P.png)	Editorial		[]	false	[{"displayOrder":0,"qnaId":137,"displayText":"PW_2. WORK: Deliberate Practice"}]	136
PW_2. WORK: Deliberate Practice	[![PW_2. WORK: Deliberate Practice](https://i.imgur.com/1nnlitw.png)](https://i.imgur.com/1nnlitw.png)\n\n~1:07:00\n\nPreparation process:\n\n- Coding & Algorithms\n- System Design\n- Domain-specific\n- Behavioral Prep\n- Resume\n- LinkedIn\n- Networking\n- Recruiters/Apply\n- Interviews\n- Offer negotiations	Editorial		[]	false	[{"displayOrder":0,"qnaId":138,"displayText":"PW_3. WORK: Growth VS. Fixed"}]	137
PW_3. WORK: Growth VS. Fixed	[![PW_3. WORK: Growth VS. Fixed](https://i.imgur.com/uuiOEdL.png)](https://i.imgur.com/uuiOEdL.png)\n\n	Editorial		[]	false	[{"displayOrder":0,"qnaId":139,"displayText":"PW_4. GREENSHEET: Get Confident-DeliberatePractice"}]	138
PW_4. GREENSHEET: Get Confident-DeliberatePractice	[![PW_4. GREENSHEET: Get Confident-DeliberatePractice](https://i.imgur.com/7pOJ4tU.png)](https://i.imgur.com/7pOJ4tU.png)\n\n	Editorial		[]	false	[]	139
